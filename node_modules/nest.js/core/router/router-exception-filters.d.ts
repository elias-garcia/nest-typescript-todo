import 'reflect-metadata';
import { Controller } from '../../common/interfaces/controller.interface';
import { ExceptionsHandler } from '../exceptions/exceptions-handler';
import { Metatype } from '../../common/interfaces/index';
import { ExceptionFilterMetadata } from '../../common/interfaces/exception-filter-metadata.interface';
import { NestContainer } from '../injector/container';
import { ExceptionFilter } from '../../common/interfaces/exception-filter.interface';
export declare class RouterExceptionFilters {
    private container;
    constructor(container: NestContainer);
    create(instance: Controller, moduleName: string): ExceptionsHandler;
    reflectExceptionFilters(instance: Controller): Metatype<any>[];
    resolveFiltersMetatypes(filters: Metatype<any>[], moduleName: string): ExceptionFilterMetadata[];
    findExceptionsFilterInstance(metatype: Metatype<any>, moduleName: string): ExceptionFilter;
    reflectCatchExceptions(metatype: Metatype<Controller>): Metatype<any>[];
}

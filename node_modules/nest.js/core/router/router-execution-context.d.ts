import 'reflect-metadata';
import { RouteParamtypes } from '../../common/enums/route-paramtypes.enum';
import { Controller } from '../../common/interfaces';
import { RouteParamsMetadata } from '../../index';
import { IRouteParamsFactory } from './interfaces/route-params-factory.interface';
export interface IndexValuePair {
    index: number;
    value: any;
}
export declare class RouterExecutionContext {
    private paramsFactory;
    constructor(paramsFactory: IRouteParamsFactory);
    create(instance: Controller, callback: (...args) => any): any;
    mapParamType(key: string): RouteParamtypes;
    reflectCallbackMetadata(instance: Controller, callback: (...args) => any): RouteParamsMetadata;
    getArgumentsLength(keys: string[], metadata: RouteParamsMetadata): number;
    createNullArray(length: number): any[];
    exchangeKeysForValues(keys: string[], metadata: RouteParamsMetadata, {req, res, next}: {
        req: any;
        res: any;
        next: any;
    }): IndexValuePair[];
}

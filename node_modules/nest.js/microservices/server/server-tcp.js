"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const net = require("net");
const JsonSocket = require("json-socket");
const constants_1 = require("../constants");
const server_1 = require("./server");
class ServerTCP extends server_1.Server {
    constructor(config) {
        super();
        this.DEFAULT_PORT = 3000;
        this.port = config.port || this.DEFAULT_PORT;
        this.init();
    }
    listen(callback) {
        this.server.listen(this.port, callback);
    }
    bindHandler(socket) {
        const sock = this.getSocketInstance(socket);
        sock.on('message', (msg) => this.handleMessage(sock, msg));
    }
    handleMessage(socket, msg) {
        const pattern = JSON.stringify(msg.pattern);
        if (!this.msgHandlers[pattern]) {
            socket.sendMessage({ err: constants_1.NO_PATTERN_MESSAGE });
            return;
        }
        const handler = this.msgHandlers[pattern];
        handler(msg.data, this.getMessageHandler(socket));
    }
    getMessageHandler(socket) {
        return (err, response) => {
            if (!response) {
                const respond = err;
                socket.sendMessage({ err: null, response: respond });
                return;
            }
            socket.sendMessage({ err, response });
        };
    }
    init() {
        this.server = net.createServer(this.bindHandler.bind(this));
        this.server.on('error', this.handleError.bind(this));
    }
    getSocketInstance(socket) {
        return new JsonSocket(socket);
    }
}
exports.ServerTCP = ServerTCP;

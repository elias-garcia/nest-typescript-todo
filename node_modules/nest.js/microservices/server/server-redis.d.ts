import * as redis from 'redis';
import { Server } from './server';
import { MicroserviceConfiguration } from '../interfaces/microservice-configuration.interface';
export declare class ServerRedis extends Server {
    private readonly url;
    private readonly DEFAULT_URL;
    constructor(config: MicroserviceConfiguration);
    listen(callback?: () => void): void;
    createRedisClient(): redis.RedisClient;
    handleConnection(callback: any, sub: any, pub: any): void;
    getMessageHandler(pub: any): (channel: any, buffer: any) => void;
    handleMessage(channel: any, buffer: any, pub: any): void;
    getMessageHandlerCallback(pub: any, pattern: any): (err: any, response: any) => void;
    getPublisher(pub: any, pattern: any): (respond: any) => void;
    tryParse(content: any): any;
    getAckQueueName(pattern: any): string;
    getResQueueName(pattern: any): string;
}
